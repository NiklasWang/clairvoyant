#ifndef _PAL_PARM_TYPE__
#define _PAL_PARM_TYPE__

namespace pandora {

enum GetParamType {
    GET_PARM_PREVIEW_SIZE,
    GET_PARM_PICTURE_SIZE,
    GET_PARM_VIDEO_SIZE,
    GET_PARM_FLASH_MODE,
    GET_PARM_HDR_MODE,
    GET_PARM_LONG_SHOT,
    GET_PARM_LONG_EXPOSURE,
    GET_PARM_SMART_SHOT,
    GET_PARM_IMAGE_STAB,
    GET_PARM_VIDEO_STAB,
    GET_PARM_FLIP_MODE,
    GET_PARM_NIGHT_SHOT,
    GET_PARM_BEAUTY_FACE,
    GET_PARM_FACE_INFO,
    GET_PARM_AE_INFO,
    GET_PARM_AWB_INFO,
    GET_PARM_AF_INFO,
    GET_PARM_HDR_INFO,
    GET_PARM_SCENE_INFO,
    GET_PARM_CAM_TYPE,
    GET_PARM_COMMAND_INF,
    GET_PARM_DUAL_CAM_MODE,
    GET_PARM_SUB_CAM_DATA,
    GET_PARM_FAIRLIGHT,
    GET_PARM_ROTATION,
    GET_PARM_WATER_MARK = 25,
    GET_PARM_ZOOM_INF,
    GET_PARM_SINGLE_BOKEH,
    GET_PARM_PLATFORM_PRIV,
    GET_PARM_MAX_INVALID,
};

enum SetParamType {
    SET_PARM_MULTI_SHOT,
    SET_PARM_AE_BRACKET,
    SET_PARM_PLATFORM_PRIV,
    SET_PARM_MAX_INVALID,
};

enum ConfigType {
    CONFIG_FOCUS_END_THRES,
    CONFIG_EXPOSURE_CHANGE,
    CONFIG_NIGHT_STAB_THRES,
    CONFIG_HDR_CONFI_THRES,
    CONFIG_EXTENDED_MSGID,
    CONFIG_LOW_LIGHT_THRES,
    CONFIG_PARM_CATEGORY,
    CONFIG_MAX_INVALID,
};

enum OtherType {
    OTHER_TYPE_EVT_CALLBACK,
    OTHER_TYPE_DATA_CALLBACK,
    OTHER_TYPE_MAX_INVALID,
};

enum PalParmType {
    PARM_TYPE_GET,
    PARM_TYPE_SET,
    PARM_TYPE_CONFIG,
    PARM_TYPE_OTHERS,
    PARM_TYPE_MAX_INVALID,
};

};

#endif
